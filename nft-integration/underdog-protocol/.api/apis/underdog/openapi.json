{
  "info": {
    "version": "2.0.0",
    "title": "Underdog Protocol API"
  },
  "servers": [
    {
      "url": "https://devnet.underdogprotocol.com",
      "description": "Solana Devnet"
    },
    {
      "url": "https://mainnet.underdogprotocol.com",
      "description": "Solana Mainnet"
    }
  ],
  "openapi": "3.0.0",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Metadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          }
        },
        "required": [
          "name",
          "image"
        ]
      },
      "CreateProjectRequest": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "semifungible": {
                "type": "boolean",
                "description": "Whether or not the NFTs in this project are semifungible"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "core": {
                "type": "boolean",
                "description": "Whether or not the NFTs in this project use mpl-core standard"
              },
              "sellerFeeBasisPoints": {
                "type": "integer",
                "description": "Creator royalties in basis points - 100 basis points = 1%",
                "example": 100
              }
            },
            "required": [
              "name",
              "image"
            ]
          }
        },
        "required": [
          "body"
        ]
      },
      "CreateProjectResponse": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer"
          },
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "projectId",
          "transactionId"
        ]
      },
      "GetProjectsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              },
              "sortBy": {
                "type": "string"
              },
              "order": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            }
          }
        },
        "required": [
          "query"
        ]
      },
      "GetProjectsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "mintAddress": {
                  "type": "string",
                  "description": "Base-58 encoded string representing an on-chain address",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "semifungible": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project are semifungible"
                },
                "transferable": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project can be transferred"
                },
                "compressed": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project are compressed"
                },
                "core": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project use mpl-core standard"
                },
                "status": {
                  "type": "string"
                },
                "sellerFeeBasisPoints": {
                  "type": "integer",
                  "description": "Creator royalties in basis points - 100 basis points = 1%",
                  "example": 100
                },
                "name": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Name stored as on-chain metadata",
                  "example": "Underdog NFT"
                },
                "symbol": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Symbol stored as on-chain metadata",
                  "example": "UPDG"
                },
                "description": {
                  "type": "string",
                  "description": "Description stored in the metadata",
                  "example": "I minted this NFT with the Underdog API"
                },
                "image": {
                  "type": "string",
                  "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                  "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                },
                "animationUrl": {
                  "type": "string",
                  "description": "URL pointing to the asset's animation.",
                  "example": "https://i.imgur.com/mGfz7Ig.mp4"
                },
                "externalUrl": {
                  "type": "string",
                  "description": "URL pointing to an external URL defining the asset",
                  "example": "https://app.underdogprotocol.com"
                },
                "attributes": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "description": "Key-value pairs of your NFT attributes",
                  "example": {
                    "points": 10,
                    "name": "LeBron"
                  }
                }
              },
              "required": [
                "id",
                "mintAddress",
                "status",
                "sellerFeeBasisPoints",
                "name",
                "image"
              ]
            }
          },
          "page": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number per page",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 1
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of results",
            "example": 1
          }
        },
        "required": [
          "results",
          "page",
          "limit",
          "totalPages",
          "totalResults"
        ]
      },
      "SearchProjectsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              },
              "sortBy": {
                "type": "string"
              },
              "order": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              },
              "query": {
                "type": "string"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "required": [
          "query"
        ]
      },
      "SearchProjectsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "mintAddress": {
                  "type": "string",
                  "description": "Base-58 encoded string representing an on-chain address",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "semifungible": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project are semifungible"
                },
                "transferable": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project can be transferred"
                },
                "compressed": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project are compressed"
                },
                "core": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in this project use mpl-core standard"
                },
                "status": {
                  "type": "string"
                },
                "sellerFeeBasisPoints": {
                  "type": "integer",
                  "description": "Creator royalties in basis points - 100 basis points = 1%",
                  "example": 100
                },
                "name": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Name stored as on-chain metadata",
                  "example": "Underdog NFT"
                },
                "symbol": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Symbol stored as on-chain metadata",
                  "example": "UPDG"
                },
                "description": {
                  "type": "string",
                  "description": "Description stored in the metadata",
                  "example": "I minted this NFT with the Underdog API"
                },
                "image": {
                  "type": "string",
                  "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                  "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                },
                "animationUrl": {
                  "type": "string",
                  "description": "URL pointing to the asset's animation.",
                  "example": "https://i.imgur.com/mGfz7Ig.mp4"
                },
                "externalUrl": {
                  "type": "string",
                  "description": "URL pointing to an external URL defining the asset",
                  "example": "https://app.underdogprotocol.com"
                },
                "attributes": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "description": "Key-value pairs of your NFT attributes",
                  "example": {
                    "points": 10,
                    "name": "LeBron"
                  }
                }
              },
              "required": [
                "id",
                "mintAddress",
                "status",
                "sellerFeeBasisPoints",
                "name",
                "image"
              ]
            }
          },
          "page": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number per page",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 1
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of results",
            "example": 1
          }
        },
        "required": [
          "results",
          "page",
          "limit",
          "totalPages",
          "totalResults"
        ]
      },
      "GetProjectRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              },
              "sortBy": {
                "type": "string"
              },
              "order": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            }
          }
        },
        "required": [
          "params",
          "query"
        ]
      },
      "GetProjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "semifungible": {
            "type": "boolean",
            "description": "Whether or not the NFTs in this project are semifungible"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFTs in this project can be transferred"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in this project are compressed"
          },
          "core": {
            "type": "boolean",
            "description": "Whether or not the NFTs in this project use mpl-core standard"
          },
          "status": {
            "type": "string"
          },
          "sellerFeeBasisPoints": {
            "type": "integer",
            "description": "Creator royalties in basis points - 100 basis points = 1%",
            "example": 100
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          },
          "nfts": {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              },
              "page": {
                "type": "number",
                "description": "Page number",
                "example": 1
              },
              "limit": {
                "type": "number",
                "description": "Number per page",
                "example": 10
              },
              "totalPages": {
                "type": "number",
                "description": "Total number of pages",
                "example": 1
              },
              "totalResults": {
                "type": "number",
                "description": "Total number of results",
                "example": 1
              }
            },
            "required": [
              "results",
              "page",
              "limit",
              "totalPages",
              "totalResults"
            ]
          }
        },
        "required": [
          "id",
          "mintAddress",
          "status",
          "sellerFeeBasisPoints",
          "name",
          "image",
          "nfts"
        ]
      },
      "GetProjectStatsRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "GetProjectStatsResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Total number of assets in the Project"
          },
          "confirmed": {
            "type": "number",
            "description": "Number of confirmed assets"
          },
          "processing": {
            "type": "number",
            "description": "Number of assets being processed"
          },
          "pending": {
            "type": "number",
            "description": "Number of assets waiting to be processed"
          },
          "burned": {
            "type": "number",
            "description": "Number of burned assets"
          },
          "failed": {
            "type": "number",
            "description": "Number of assets failed"
          }
        },
        "required": [
          "total",
          "confirmed",
          "processing",
          "pending",
          "burned",
          "failed"
        ]
      },
      "UpdateProjectRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "sellerFeeBasisPoints": {
                "type": "integer",
                "description": "Creator royalties in basis points - 100 basis points = 1%",
                "example": 100
              }
            },
            "required": [
              "name",
              "image",
              "sellerFeeBasisPoints"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "UpdateProjectResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "projectId": {
            "type": "integer"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "projectId",
          "mintAddress"
        ]
      },
      "PartialUpdateProjectRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "sellerFeeBasisPoints": {
                "type": "integer",
                "description": "Creator royalties in basis points - 100 basis points = 1%",
                "example": 100
              }
            }
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "PartialUpdateProjectResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "projectId": {
            "type": "integer"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "projectId",
          "mintAddress"
        ]
      },
      "WithdrawProjectRoyaltiesRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "receiverAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              }
            },
            "required": [
              "receiverAddress"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "WithdrawProjectRoyaltiesResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "projectId": {
            "type": "integer"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "projectId",
          "mintAddress"
        ]
      },
      "CreateNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "receiver": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Address that will receive the NFT",
                    "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace of the application (e.g. solarplex, superteam)",
                    "example": "public"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                    "example": "kevin@underdogprotocol.com"
                  }
                }
              },
              "receiverAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              },
              "delegated": {
                "type": "boolean",
                "description": "If true, your Project will have delegated authority to transfer or burn the asset"
              }
            },
            "required": [
              "name",
              "image"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "CreateTransferableNftResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "CreateNonTransferableNftResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          },
          "id": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "ownerAddress": {
            "type": "string",
            "description": "Wallet address for the NFT's owner",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "claimerAddress": {
            "type": "string",
            "description": "Wallet address allowed to claim the NFT",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "image",
          "id",
          "mintAddress",
          "status"
        ]
      },
      "UpsertNftResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 32,
              "description": "Name stored as on-chain metadata",
              "example": "Underdog NFT"
            },
            "symbol": {
              "type": "string",
              "maxLength": 10,
              "description": "Symbol stored as on-chain metadata",
              "example": "UPDG"
            },
            "description": {
              "type": "string",
              "description": "Description stored in the metadata",
              "example": "I minted this NFT with the Underdog API"
            },
            "image": {
              "type": "string",
              "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
              "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
            },
            "animationUrl": {
              "type": "string",
              "description": "URL pointing to the asset's animation.",
              "example": "https://i.imgur.com/mGfz7Ig.mp4"
            },
            "externalUrl": {
              "type": "string",
              "description": "URL pointing to an external URL defining the asset",
              "example": "https://app.underdogprotocol.com"
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "description": "Key-value pairs of your NFT attributes",
              "example": {
                "points": 10,
                "name": "LeBron"
              }
            },
            "id": {
              "type": "number",
              "description": "Unique ID for an NFT in a Project"
            },
            "projectId": {
              "type": "number",
              "description": "The ID of the Project the NFT is part of"
            },
            "transferable": {
              "type": "boolean",
              "description": "Whether or not the NFT can be transferred based on the Project its a part of"
            },
            "compressed": {
              "type": "boolean",
              "description": "Whether or not the NFTs in the Project are compressed"
            },
            "mintAddress": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "ownerAddress": {
              "type": "string",
              "description": "Wallet address for the NFT's owner",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "claimerAddress": {
              "type": "string",
              "description": "Wallet address allowed to claim the NFT",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "status": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "image",
            "id",
            "mintAddress",
            "status"
          ]
        }
      },
      "BatchNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "receiver": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Address that will receive the NFT",
                    "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace of the application (e.g. solarplex, superteam)",
                    "example": "public"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                    "example": "kevin@underdogprotocol.com"
                  }
                }
              },
              "receiverAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              },
              "delegated": {
                "type": "boolean",
                "description": "If true, your Project will have delegated authority to transfer or burn the asset"
              },
              "batch": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "receiver": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Address that will receive the NFT",
                          "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Namespace of the application (e.g. solarplex, superteam)",
                          "example": "public"
                        },
                        "identifier": {
                          "type": "string",
                          "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                          "example": "kevin@underdogprotocol.com"
                        }
                      }
                    },
                    "receiverAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "delegated": {
                      "type": "boolean",
                      "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                    }
                  }
                }
              }
            },
            "required": [
              "name",
              "image",
              "batch"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "BatchNftResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "transactionId": {
              "type": "string",
              "description": "Transaction ID that identifies the Transaction generated by an API request"
            },
            "nftId": {
              "type": "number",
              "description": "Unique ID for an NFT in a Project"
            },
            "projectId": {
              "type": "number",
              "description": "The ID of the Project the NFT is part of"
            },
            "transferable": {
              "type": "boolean",
              "description": "Whether or not the NFT can be transferred based on the Project its a part of"
            },
            "compressed": {
              "type": "boolean",
              "description": "Whether or not the NFTs in the Project are compressed"
            }
          },
          "required": [
            "transactionId",
            "nftId"
          ]
        }
      },
      "GetNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "GetNftResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          },
          "id": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "ownerAddress": {
            "type": "string",
            "description": "Wallet address for the NFT's owner",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "claimerAddress": {
            "type": "string",
            "description": "Wallet address allowed to claim the NFT",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "image",
          "id",
          "mintAddress",
          "status"
        ]
      },
      "GetNftByMintAddressRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "mintAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              }
            },
            "required": [
              "mintAddress"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "GetNftByMintAddressResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "ownerAddress": {
            "type": "string",
            "description": "Wallet address for the NFT's owner",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "claimerAddress": {
            "type": "string",
            "description": "Wallet address allowed to claim the NFT",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "image",
          "mintAddress",
          "status"
        ]
      },
      "GetNftsRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              },
              "sortBy": {
                "type": "string"
              },
              "order": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              },
              "ownerAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              },
              "identifier": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "params",
          "query"
        ]
      },
      "GetNftsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Name stored as on-chain metadata",
                  "example": "Underdog NFT"
                },
                "symbol": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Symbol stored as on-chain metadata",
                  "example": "UPDG"
                },
                "description": {
                  "type": "string",
                  "description": "Description stored in the metadata",
                  "example": "I minted this NFT with the Underdog API"
                },
                "image": {
                  "type": "string",
                  "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                  "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                },
                "animationUrl": {
                  "type": "string",
                  "description": "URL pointing to the asset's animation.",
                  "example": "https://i.imgur.com/mGfz7Ig.mp4"
                },
                "externalUrl": {
                  "type": "string",
                  "description": "URL pointing to an external URL defining the asset",
                  "example": "https://app.underdogprotocol.com"
                },
                "attributes": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "description": "Key-value pairs of your NFT attributes",
                  "example": {
                    "points": 10,
                    "name": "LeBron"
                  }
                },
                "id": {
                  "type": "number",
                  "description": "Unique ID for an NFT in a Project"
                },
                "projectId": {
                  "type": "number",
                  "description": "The ID of the Project the NFT is part of"
                },
                "transferable": {
                  "type": "boolean",
                  "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                },
                "compressed": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in the Project are compressed"
                },
                "mintAddress": {
                  "type": "string",
                  "description": "Base-58 encoded string representing an on-chain address",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "ownerAddress": {
                  "type": "string",
                  "description": "Wallet address for the NFT's owner",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "claimerAddress": {
                  "type": "string",
                  "description": "Wallet address allowed to claim the NFT",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "image",
                "id",
                "mintAddress",
                "status"
              ]
            }
          },
          "page": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number per page",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 1
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of results",
            "example": 1
          }
        },
        "required": [
          "results",
          "page",
          "limit",
          "totalPages",
          "totalResults"
        ]
      },
      "SearchNftsRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              },
              "sortBy": {
                "type": "string"
              },
              "order": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              },
              "search": {
                "type": "string"
              },
              "query": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "params",
          "query"
        ]
      },
      "SearchNftsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Name stored as on-chain metadata",
                  "example": "Underdog NFT"
                },
                "symbol": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Symbol stored as on-chain metadata",
                  "example": "UPDG"
                },
                "description": {
                  "type": "string",
                  "description": "Description stored in the metadata",
                  "example": "I minted this NFT with the Underdog API"
                },
                "image": {
                  "type": "string",
                  "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                  "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                },
                "animationUrl": {
                  "type": "string",
                  "description": "URL pointing to the asset's animation.",
                  "example": "https://i.imgur.com/mGfz7Ig.mp4"
                },
                "externalUrl": {
                  "type": "string",
                  "description": "URL pointing to an external URL defining the asset",
                  "example": "https://app.underdogprotocol.com"
                },
                "attributes": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "description": "Key-value pairs of your NFT attributes",
                  "example": {
                    "points": 10,
                    "name": "LeBron"
                  }
                },
                "id": {
                  "type": "number",
                  "description": "Unique ID for an NFT in a Project"
                },
                "projectId": {
                  "type": "number",
                  "description": "The ID of the Project the NFT is part of"
                },
                "transferable": {
                  "type": "boolean",
                  "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                },
                "compressed": {
                  "type": "boolean",
                  "description": "Whether or not the NFTs in the Project are compressed"
                },
                "mintAddress": {
                  "type": "string",
                  "description": "Base-58 encoded string representing an on-chain address",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "ownerAddress": {
                  "type": "string",
                  "description": "Wallet address for the NFT's owner",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "claimerAddress": {
                  "type": "string",
                  "description": "Wallet address allowed to claim the NFT",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "image",
                "id",
                "mintAddress",
                "status"
              ]
            }
          },
          "page": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number per page",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 1
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of results",
            "example": 1
          }
        },
        "required": [
          "results",
          "page",
          "limit",
          "totalPages",
          "totalResults"
        ]
      },
      "UpdateNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              }
            },
            "required": [
              "image"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "UpdateNftResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          },
          "id": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "ownerAddress": {
            "type": "string",
            "description": "Wallet address for the NFT's owner",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "claimerAddress": {
            "type": "string",
            "description": "Wallet address allowed to claim the NFT",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "image",
          "id",
          "mintAddress",
          "status"
        ]
      },
      "PartialUpdateNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              }
            }
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "PartialUpdateNftResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Name stored as on-chain metadata",
            "example": "Underdog NFT"
          },
          "symbol": {
            "type": "string",
            "maxLength": 10,
            "description": "Symbol stored as on-chain metadata",
            "example": "UPDG"
          },
          "description": {
            "type": "string",
            "description": "Description stored in the metadata",
            "example": "I minted this NFT with the Underdog API"
          },
          "image": {
            "type": "string",
            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
          },
          "animationUrl": {
            "type": "string",
            "description": "URL pointing to the asset's animation.",
            "example": "https://i.imgur.com/mGfz7Ig.mp4"
          },
          "externalUrl": {
            "type": "string",
            "description": "URL pointing to an external URL defining the asset",
            "example": "https://app.underdogprotocol.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Key-value pairs of your NFT attributes",
            "example": {
              "points": 10,
              "name": "LeBron"
            }
          },
          "id": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "ownerAddress": {
            "type": "string",
            "description": "Wallet address for the NFT's owner",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "claimerAddress": {
            "type": "string",
            "description": "Wallet address allowed to claim the NFT",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "image",
          "id",
          "mintAddress",
          "status"
        ]
      },
      "GetNftClaimLinkRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "GetNftClaimLinkResponse": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "mintAddress": {
            "type": "string"
          },
          "claimerAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "otp": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "link",
          "mintAddress"
        ]
      },
      "RevokeNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "RevokeNftResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "BurnNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "BurnNftResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "transferable": {
            "type": "boolean",
            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
          },
          "compressed": {
            "type": "boolean",
            "description": "Whether or not the NFTs in the Project are compressed"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "CreateSftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "receiver": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Address that will receive the NFT",
                    "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace of the application (e.g. solarplex, superteam)",
                    "example": "public"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                    "example": "kevin@underdogprotocol.com"
                  }
                }
              },
              "receiverAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              },
              "delegated": {
                "type": "boolean",
                "description": "If true, your Project will have delegated authority to transfer or burn the asset"
              }
            }
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "CreateSftResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          }
        },
        "required": [
          "transactionId",
          "nftId"
        ]
      },
      "BatchSftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "body": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "receiver": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "Address that will receive the NFT",
                      "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace of the application (e.g. solarplex, superteam)",
                      "example": "public"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                      "example": "kevin@underdogprotocol.com"
                    }
                  }
                },
                "receiverAddress": {
                  "type": "string",
                  "description": "Base-58 encoded string representing an on-chain address",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "delegated": {
                  "type": "boolean",
                  "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                }
              }
            }
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "BatchSftResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "transactionId": {
              "type": "string",
              "description": "Transaction ID that identifies the Transaction generated by an API request"
            },
            "nftId": {
              "type": "number",
              "description": "Unique ID for an NFT in a Project"
            },
            "projectId": {
              "type": "number",
              "description": "The ID of the Project the NFT is part of"
            }
          },
          "required": [
            "transactionId",
            "nftId"
          ]
        }
      },
      "GetSftsRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              }
            }
          }
        },
        "required": [
          "params",
          "query"
        ]
      },
      "UpdateAssetRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              }
            },
            "required": [
              "name",
              "image"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "UpdateAssetResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "PartialUpdateAssetRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "Name stored as on-chain metadata",
                "example": "Underdog NFT"
              },
              "symbol": {
                "type": "string",
                "maxLength": 10,
                "description": "Symbol stored as on-chain metadata",
                "example": "UPDG"
              },
              "description": {
                "type": "string",
                "description": "Description stored in the metadata",
                "example": "I minted this NFT with the Underdog API"
              },
              "image": {
                "type": "string",
                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
              },
              "animationUrl": {
                "type": "string",
                "description": "URL pointing to the asset's animation.",
                "example": "https://i.imgur.com/mGfz7Ig.mp4"
              },
              "externalUrl": {
                "type": "string",
                "description": "URL pointing to an external URL defining the asset",
                "example": "https://app.underdogprotocol.com"
              },
              "attributes": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "description": "Key-value pairs of your NFT attributes",
                "example": {
                  "points": 10,
                  "name": "LeBron"
                }
              }
            },
            "required": [
              "name",
              "image"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "PartialUpdateAssetResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "TransferNftRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          },
          "body": {
            "type": "object",
            "properties": {
              "receiverAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              }
            },
            "required": [
              "receiverAddress"
            ]
          }
        },
        "required": [
          "params",
          "body"
        ]
      },
      "TransferNftResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "BurnAssetRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer"
              },
              "nftId": {
                "type": "integer"
              }
            },
            "required": [
              "projectId",
              "nftId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "BurnAssetResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction ID that identifies the Transaction generated by an API request"
          },
          "nftId": {
            "type": "number",
            "description": "Unique ID for an NFT in a Project"
          },
          "projectId": {
            "type": "number",
            "description": "The ID of the Project the NFT is part of"
          },
          "mintAddress": {
            "type": "string",
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          }
        },
        "required": [
          "transactionId",
          "nftId",
          "mintAddress"
        ]
      },
      "CreateSnapshotRequest": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "mintAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              },
              "hashlist": {
                "type": "boolean"
              },
              "unique": {
                "type": "boolean"
              }
            },
            "required": [
              "description",
              "mintAddress"
            ]
          }
        },
        "required": [
          "body"
        ]
      },
      "CreateSnapshotResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "snapshotId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "transactionId",
          "snapshotId"
        ]
      },
      "GetSnapshotsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "nullable": true,
                "default": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "nullable": true,
                "maximum": 100,
                "default": 10,
                "description": "Items per page"
              },
              "mintAddress": {
                "type": "string",
                "description": "Base-58 encoded string representing an on-chain address",
                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
              }
            }
          }
        },
        "required": [
          "query"
        ]
      },
      "GetSnapshotsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                },
                "mintAddress": {
                  "type": "string",
                  "nullable": true,
                  "description": "Base-58 encoded string representing an on-chain address",
                  "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                },
                "url": {
                  "type": "string",
                  "nullable": true
                },
                "network": {
                  "type": "string",
                  "enum": [
                    "DEVNET",
                    "LOCALNET",
                    "MAINNET"
                  ]
                },
                "createdAt": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              },
              "required": [
                "id",
                "description",
                "count",
                "network",
                "createdAt"
              ]
            }
          },
          "page": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number per page",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 1
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of results",
            "example": 1
          }
        },
        "required": [
          "results",
          "page",
          "limit",
          "totalPages",
          "totalResults"
        ]
      },
      "GetSnapshotRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "snapshotId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "snapshotId"
            ]
          }
        },
        "required": [
          "params"
        ]
      },
      "GetSnapshotResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "count": {
            "type": "number"
          },
          "mintAddress": {
            "type": "string",
            "nullable": true,
            "description": "Base-58 encoded string representing an on-chain address",
            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "network": {
            "type": "string",
            "enum": [
              "DEVNET",
              "LOCALNET",
              "MAINNET"
            ]
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "count",
          "network",
          "createdAt"
        ]
      },
      "DeleteSnapshotRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "snapshotId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "snapshotId"
            ]
          }
        },
        "required": [
          "params"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/v2/projects": {
      "get": {
        "summary": "List all Projects",
        "description": "This endpoint allows you to retrieve a paginated list of all your Projects.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "semifungible": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project are semifungible"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project can be transferred"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project are compressed"
                          },
                          "core": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project use mpl-core standard"
                          },
                          "status": {
                            "type": "string"
                          },
                          "sellerFeeBasisPoints": {
                            "type": "integer",
                            "description": "Creator royalties in basis points - 100 basis points = 1%",
                            "example": 100
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "mintAddress",
                          "status",
                          "sellerFeeBasisPoints",
                          "name",
                          "image"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Project",
        "description": "This endpoint allows you to create a new Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "semifungible": {
                    "type": "boolean",
                    "description": "Whether or not the NFTs in this project are semifungible"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "core": {
                    "type": "boolean",
                    "description": "Whether or not the NFTs in this project use mpl-core standard"
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projectId": {
                      "type": "integer"
                    },
                    "transactionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "projectId",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/search": {
      "get": {
        "summary": "Search Projects",
        "description": "This endpoint allows you to search Projects with a query.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "semifungible": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project are semifungible"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project can be transferred"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project are compressed"
                          },
                          "core": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project use mpl-core standard"
                          },
                          "status": {
                            "type": "string"
                          },
                          "sellerFeeBasisPoints": {
                            "type": "integer",
                            "description": "Creator royalties in basis points - 100 basis points = 1%",
                            "example": 100
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "mintAddress",
                          "status",
                          "sellerFeeBasisPoints",
                          "name",
                          "image"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}": {
      "get": {
        "summary": "Retrieve a Project",
        "description": "This endpoint allows you to retrieve a Project by providing the Project ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Project with a paginated list of NFTs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "semifungible": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are semifungible"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project can be transferred"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are compressed"
                    },
                    "core": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project use mpl-core standard"
                    },
                    "status": {
                      "type": "string"
                    },
                    "sellerFeeBasisPoints": {
                      "type": "integer",
                      "description": "Creator royalties in basis points - 100 basis points = 1%",
                      "example": 100
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "nfts": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 32,
                                "description": "Name stored as on-chain metadata",
                                "example": "Underdog NFT"
                              },
                              "symbol": {
                                "type": "string",
                                "maxLength": 10,
                                "description": "Symbol stored as on-chain metadata",
                                "example": "UPDG"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description stored in the metadata",
                                "example": "I minted this NFT with the Underdog API"
                              },
                              "image": {
                                "type": "string",
                                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                              },
                              "animationUrl": {
                                "type": "string",
                                "description": "URL pointing to the asset's animation.",
                                "example": "https://i.imgur.com/mGfz7Ig.mp4"
                              },
                              "externalUrl": {
                                "type": "string",
                                "description": "URL pointing to an external URL defining the asset",
                                "example": "https://app.underdogprotocol.com"
                              },
                              "attributes": {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "description": "Key-value pairs of your NFT attributes",
                                "example": {
                                  "points": 10,
                                  "name": "LeBron"
                                }
                              },
                              "id": {
                                "type": "number",
                                "description": "Unique ID for an NFT in a Project"
                              },
                              "projectId": {
                                "type": "number",
                                "description": "The ID of the Project the NFT is part of"
                              },
                              "transferable": {
                                "type": "boolean",
                                "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                              },
                              "compressed": {
                                "type": "boolean",
                                "description": "Whether or not the NFTs in the Project are compressed"
                              },
                              "mintAddress": {
                                "type": "string",
                                "description": "Base-58 encoded string representing an on-chain address",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "Wallet address for the NFT's owner",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "claimerAddress": {
                                "type": "string",
                                "description": "Wallet address allowed to claim the NFT",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "image",
                              "id",
                              "mintAddress",
                              "status"
                            ]
                          }
                        },
                        "page": {
                          "type": "number",
                          "description": "Page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "Number per page",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total number of pages",
                          "example": 1
                        },
                        "totalResults": {
                          "type": "number",
                          "description": "Total number of results",
                          "example": 1
                        }
                      },
                      "required": [
                        "results",
                        "page",
                        "limit",
                        "totalPages",
                        "totalResults"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "mintAddress",
                    "status",
                    "sellerFeeBasisPoints",
                    "name",
                    "image",
                    "nfts"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Project",
        "description": "This endpoint allows you to perform an update on a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                },
                "required": [
                  "name",
                  "image",
                  "sellerFeeBasisPoints"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "projectId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partial Update a Project",
        "description": "This endpoint allows you to perform a partial update on a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "projectId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/stats": {
      "get": {
        "summary": "Retrieve Project Stats",
        "description": "This endpoint allows you to retrieve stats about the NFTs in a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "Total number of assets in the Project"
                    },
                    "confirmed": {
                      "type": "number",
                      "description": "Number of confirmed assets"
                    },
                    "processing": {
                      "type": "number",
                      "description": "Number of assets being processed"
                    },
                    "pending": {
                      "type": "number",
                      "description": "Number of assets waiting to be processed"
                    },
                    "burned": {
                      "type": "number",
                      "description": "Number of burned assets"
                    },
                    "failed": {
                      "type": "number",
                      "description": "Number of assets failed"
                    }
                  },
                  "required": [
                    "total",
                    "confirmed",
                    "processing",
                    "pending",
                    "burned",
                    "failed"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/royalties/withdraw": {
      "post": {
        "summary": "Withdraw Project Royalties",
        "description": "This endpoint allows you to withdraw Project royalties.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  }
                },
                "required": [
                  "receiverAddress"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "projectId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts": {
      "post": {
        "summary": "Create an NFT",
        "description": "This endpoint allows you to create an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "receiver": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address that will receive the NFT",
                        "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace of the application (e.g. solarplex, superteam)",
                        "example": "public"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                        "example": "kevin@underdogprotocol.com"
                      }
                    }
                  },
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  },
                  "delegated": {
                    "type": "boolean",
                    "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all NFTs",
        "description": "This endpoints allows you to retrieve a paginated list of all NFTs in a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ownerAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "identifier",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts/lazy": {
      "post": {
        "summary": "Lazy Create an NFT",
        "description": "This endpoint allows you to lazily create an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "receiver": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address that will receive the NFT",
                        "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace of the application (e.g. solarplex, superteam)",
                        "example": "public"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                        "example": "kevin@underdogprotocol.com"
                      }
                    }
                  },
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  },
                  "delegated": {
                    "type": "boolean",
                    "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts/batch": {
      "post": {
        "summary": "Create NFTs",
        "description": "This endpoint allows you to create a batch of NFTs.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "receiver": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address that will receive the NFT",
                        "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace of the application (e.g. solarplex, superteam)",
                        "example": "public"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                        "example": "kevin@underdogprotocol.com"
                      }
                    }
                  },
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  },
                  "delegated": {
                    "type": "boolean",
                    "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                  },
                  "batch": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 32,
                          "description": "Name stored as on-chain metadata",
                          "example": "Underdog NFT"
                        },
                        "symbol": {
                          "type": "string",
                          "maxLength": 10,
                          "description": "Symbol stored as on-chain metadata",
                          "example": "UPDG"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description stored in the metadata",
                          "example": "I minted this NFT with the Underdog API"
                        },
                        "image": {
                          "type": "string",
                          "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                          "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                        },
                        "animationUrl": {
                          "type": "string",
                          "description": "URL pointing to the asset's animation.",
                          "example": "https://i.imgur.com/mGfz7Ig.mp4"
                        },
                        "externalUrl": {
                          "type": "string",
                          "description": "URL pointing to an external URL defining the asset",
                          "example": "https://app.underdogprotocol.com"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "description": "Key-value pairs of your NFT attributes",
                          "example": {
                            "points": 10,
                            "name": "LeBron"
                          }
                        },
                        "receiver": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "Address that will receive the NFT",
                              "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                            },
                            "namespace": {
                              "type": "string",
                              "description": "Namespace of the application (e.g. solarplex, superteam)",
                              "example": "public"
                            },
                            "identifier": {
                              "type": "string",
                              "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                              "example": "kevin@underdogprotocol.com"
                            }
                          }
                        },
                        "receiverAddress": {
                          "type": "string",
                          "description": "Base-58 encoded string representing an on-chain address",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "delegated": {
                          "type": "boolean",
                          "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "image",
                  "batch"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transactionId": {
                        "type": "string",
                        "description": "Transaction ID that identifies the Transaction generated by an API request"
                      },
                      "nftId": {
                        "type": "number",
                        "description": "Unique ID for an NFT in a Project"
                      },
                      "projectId": {
                        "type": "number",
                        "description": "The ID of the Project the NFT is part of"
                      },
                      "transferable": {
                        "type": "boolean",
                        "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                      },
                      "compressed": {
                        "type": "boolean",
                        "description": "Whether or not the NFTs in the Project are compressed"
                      }
                    },
                    "required": [
                      "transactionId",
                      "nftId"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts/search": {
      "get": {
        "summary": "Search NFTs",
        "description": "This endpoints allows you to search a paginated list of NFTs by owner, mint, or claimer address.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts/{nftId}": {
      "get": {
        "summary": "Retrieve an NFT",
        "description": "This endpoint allows you to retrieve an NFT by ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an NFT",
        "description": "This endpoint allows you to perform an update on an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partial Update an NFT",
        "description": "This endpoint allows you to perform a partial update on an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts/{nftId}/transfer": {
      "post": {
        "summary": "Transfer an NFT",
        "description": "This endpoint allows you to transfer an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  }
                },
                "required": [
                  "receiverAddress"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/nfts/{nftId}/burn": {
      "post": {
        "summary": "Burn an NFT",
        "description": "This endpoint allows you to burn an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/sfts": {
      "post": {
        "summary": "Create an SFT",
        "description": "This endpoint allows you to create an SFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiver": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address that will receive the NFT",
                        "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace of the application (e.g. solarplex, superteam)",
                        "example": "public"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                        "example": "kevin@underdogprotocol.com"
                      }
                    }
                  },
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  },
                  "delegated": {
                    "type": "boolean",
                    "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/sfts/batch": {
      "post": {
        "summary": "Create SFTs",
        "description": "This endpoint allows you to create a batch of SFTs.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "receiver": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Address that will receive the NFT",
                          "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Namespace of the application (e.g. solarplex, superteam)",
                          "example": "public"
                        },
                        "identifier": {
                          "type": "string",
                          "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                          "example": "kevin@underdogprotocol.com"
                        }
                      }
                    },
                    "receiverAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "delegated": {
                      "type": "boolean",
                      "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transactionId": {
                        "type": "string",
                        "description": "Transaction ID that identifies the Transaction generated by an API request"
                      },
                      "nftId": {
                        "type": "number",
                        "description": "Unique ID for an NFT in a Project"
                      },
                      "projectId": {
                        "type": "number",
                        "description": "The ID of the Project the NFT is part of"
                      }
                    },
                    "required": [
                      "transactionId",
                      "nftId"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/t": {
      "post": {
        "summary": "Create a Project",
        "description": "This endpoint allows you to create a new Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "semifungible": {
                    "type": "boolean",
                    "description": "Whether or not the NFTs in this project are semifungible"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "core": {
                    "type": "boolean",
                    "description": "Whether or not the NFTs in this project use mpl-core standard"
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projectId": {
                      "type": "integer"
                    },
                    "transactionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "projectId",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/t/{projectId}": {
      "get": {
        "summary": "Retrieve a Project",
        "description": "This endpoint allows you to retrieve a Project by providing the Project ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Project with a paginated list of NFTs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "semifungible": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are semifungible"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project can be transferred"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are compressed"
                    },
                    "core": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project use mpl-core standard"
                    },
                    "status": {
                      "type": "string"
                    },
                    "sellerFeeBasisPoints": {
                      "type": "integer",
                      "description": "Creator royalties in basis points - 100 basis points = 1%",
                      "example": 100
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "nfts": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 32,
                                "description": "Name stored as on-chain metadata",
                                "example": "Underdog NFT"
                              },
                              "symbol": {
                                "type": "string",
                                "maxLength": 10,
                                "description": "Symbol stored as on-chain metadata",
                                "example": "UPDG"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description stored in the metadata",
                                "example": "I minted this NFT with the Underdog API"
                              },
                              "image": {
                                "type": "string",
                                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                              },
                              "animationUrl": {
                                "type": "string",
                                "description": "URL pointing to the asset's animation.",
                                "example": "https://i.imgur.com/mGfz7Ig.mp4"
                              },
                              "externalUrl": {
                                "type": "string",
                                "description": "URL pointing to an external URL defining the asset",
                                "example": "https://app.underdogprotocol.com"
                              },
                              "attributes": {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "description": "Key-value pairs of your NFT attributes",
                                "example": {
                                  "points": 10,
                                  "name": "LeBron"
                                }
                              },
                              "id": {
                                "type": "number",
                                "description": "Unique ID for an NFT in a Project"
                              },
                              "projectId": {
                                "type": "number",
                                "description": "The ID of the Project the NFT is part of"
                              },
                              "transferable": {
                                "type": "boolean",
                                "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                              },
                              "compressed": {
                                "type": "boolean",
                                "description": "Whether or not the NFTs in the Project are compressed"
                              },
                              "mintAddress": {
                                "type": "string",
                                "description": "Base-58 encoded string representing an on-chain address",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "Wallet address for the NFT's owner",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "claimerAddress": {
                                "type": "string",
                                "description": "Wallet address allowed to claim the NFT",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "image",
                              "id",
                              "mintAddress",
                              "status"
                            ]
                          }
                        },
                        "page": {
                          "type": "number",
                          "description": "Page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "Number per page",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total number of pages",
                          "example": 1
                        },
                        "totalResults": {
                          "type": "number",
                          "description": "Total number of results",
                          "example": 1
                        }
                      },
                      "required": [
                        "results",
                        "page",
                        "limit",
                        "totalPages",
                        "totalResults"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "mintAddress",
                    "status",
                    "sellerFeeBasisPoints",
                    "name",
                    "image",
                    "nfts"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Project",
        "description": "This endpoint allows you to perform an update on a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                },
                "required": [
                  "name",
                  "image",
                  "sellerFeeBasisPoints"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "params": {
                      "type": "object",
                      "properties": {
                        "projectId": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "projectId"
                      ]
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 32,
                          "description": "Name stored as on-chain metadata",
                          "example": "Underdog NFT"
                        },
                        "symbol": {
                          "type": "string",
                          "maxLength": 10,
                          "description": "Symbol stored as on-chain metadata",
                          "example": "UPDG"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description stored in the metadata",
                          "example": "I minted this NFT with the Underdog API"
                        },
                        "image": {
                          "type": "string",
                          "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                          "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                        },
                        "animationUrl": {
                          "type": "string",
                          "description": "URL pointing to the asset's animation.",
                          "example": "https://i.imgur.com/mGfz7Ig.mp4"
                        },
                        "externalUrl": {
                          "type": "string",
                          "description": "URL pointing to an external URL defining the asset",
                          "example": "https://app.underdogprotocol.com"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "description": "Key-value pairs of your NFT attributes",
                          "example": {
                            "points": 10,
                            "name": "LeBron"
                          }
                        },
                        "sellerFeeBasisPoints": {
                          "type": "integer",
                          "description": "Creator royalties in basis points - 100 basis points = 1%",
                          "example": 100
                        }
                      },
                      "required": [
                        "name",
                        "image",
                        "sellerFeeBasisPoints"
                      ]
                    }
                  },
                  "required": [
                    "params",
                    "body"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partial Update a Project",
        "description": "This endpoint allows you to perform a partial update on a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/t/{projectId}/stats": {
      "get": {
        "summary": "Retrieve Project Stats",
        "description": "This endpoint allows you to retrieve stats about the NFTs in a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "Total number of assets in the Project"
                    },
                    "confirmed": {
                      "type": "number",
                      "description": "Number of confirmed assets"
                    },
                    "processing": {
                      "type": "number",
                      "description": "Number of assets being processed"
                    },
                    "pending": {
                      "type": "number",
                      "description": "Number of assets waiting to be processed"
                    },
                    "burned": {
                      "type": "number",
                      "description": "Number of burned assets"
                    },
                    "failed": {
                      "type": "number",
                      "description": "Number of assets failed"
                    }
                  },
                  "required": [
                    "total",
                    "confirmed",
                    "processing",
                    "pending",
                    "burned",
                    "failed"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/t/{projectId}/nfts": {
      "get": {
        "summary": "List all NFTs",
        "description": "This endpoints allows you to retrieve a paginated list of all NFTs in a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ownerAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "identifier",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an NFT",
        "description": "This endpoint allows you to create a new NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "receiver": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address that will receive the NFT",
                        "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace of the application (e.g. solarplex, superteam)",
                        "example": "public"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                        "example": "kevin@underdogprotocol.com"
                      }
                    }
                  },
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  },
                  "delegated": {
                    "type": "boolean",
                    "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an array of NFTs with upserted metadata",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 32,
                          "description": "Name stored as on-chain metadata",
                          "example": "Underdog NFT"
                        },
                        "symbol": {
                          "type": "string",
                          "maxLength": 10,
                          "description": "Symbol stored as on-chain metadata",
                          "example": "UPDG"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description stored in the metadata",
                          "example": "I minted this NFT with the Underdog API"
                        },
                        "image": {
                          "type": "string",
                          "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                          "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                        },
                        "animationUrl": {
                          "type": "string",
                          "description": "URL pointing to the asset's animation.",
                          "example": "https://i.imgur.com/mGfz7Ig.mp4"
                        },
                        "externalUrl": {
                          "type": "string",
                          "description": "URL pointing to an external URL defining the asset",
                          "example": "https://app.underdogprotocol.com"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "description": "Key-value pairs of your NFT attributes",
                          "example": {
                            "points": 10,
                            "name": "LeBron"
                          }
                        },
                        "id": {
                          "type": "number",
                          "description": "Unique ID for an NFT in a Project"
                        },
                        "projectId": {
                          "type": "number",
                          "description": "The ID of the Project the NFT is part of"
                        },
                        "transferable": {
                          "type": "boolean",
                          "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                        },
                        "compressed": {
                          "type": "boolean",
                          "description": "Whether or not the NFTs in the Project are compressed"
                        },
                        "mintAddress": {
                          "type": "string",
                          "description": "Base-58 encoded string representing an on-chain address",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "ownerAddress": {
                          "type": "string",
                          "description": "Wallet address for the NFT's owner",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "claimerAddress": {
                          "type": "string",
                          "description": "Wallet address allowed to claim the NFT",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "image",
                        "id",
                        "mintAddress",
                        "status"
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/t/{projectId}/nfts/search": {
      "get": {
        "summary": "Search NFTs",
        "description": "This endpoints allows you to search a paginated list of NFTs by owner, mint, or claimer address.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/t/{projectId}/nfts/{nftId}": {
      "get": {
        "summary": "Retrieve an NFT",
        "description": "This endpoint allows you to retrieve an NFT by NFT ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an NFT",
        "description": "This endpoint allows you to perform an update on an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partial Update an NFT",
        "description": "This endpoint allows you to perform a partial update on an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n": {
      "post": {
        "summary": "Create a Project",
        "description": "This endpoint allows you to create a new Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "semifungible": {
                    "type": "boolean",
                    "description": "Whether or not the NFTs in this project are semifungible"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "core": {
                    "type": "boolean",
                    "description": "Whether or not the NFTs in this project use mpl-core standard"
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projectId": {
                      "type": "integer"
                    },
                    "transactionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "projectId",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}": {
      "get": {
        "summary": "Retrieve a Project",
        "description": "This endpoint allows you to retrieve a Project by Project ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Project with a paginated list of NFTs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "semifungible": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are semifungible"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project can be transferred"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are compressed"
                    },
                    "core": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project use mpl-core standard"
                    },
                    "status": {
                      "type": "string"
                    },
                    "sellerFeeBasisPoints": {
                      "type": "integer",
                      "description": "Creator royalties in basis points - 100 basis points = 1%",
                      "example": 100
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "nfts": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 32,
                                "description": "Name stored as on-chain metadata",
                                "example": "Underdog NFT"
                              },
                              "symbol": {
                                "type": "string",
                                "maxLength": 10,
                                "description": "Symbol stored as on-chain metadata",
                                "example": "UPDG"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description stored in the metadata",
                                "example": "I minted this NFT with the Underdog API"
                              },
                              "image": {
                                "type": "string",
                                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                              },
                              "animationUrl": {
                                "type": "string",
                                "description": "URL pointing to the asset's animation.",
                                "example": "https://i.imgur.com/mGfz7Ig.mp4"
                              },
                              "externalUrl": {
                                "type": "string",
                                "description": "URL pointing to an external URL defining the asset",
                                "example": "https://app.underdogprotocol.com"
                              },
                              "attributes": {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "description": "Key-value pairs of your NFT attributes",
                                "example": {
                                  "points": 10,
                                  "name": "LeBron"
                                }
                              },
                              "id": {
                                "type": "number",
                                "description": "Unique ID for an NFT in a Project"
                              },
                              "projectId": {
                                "type": "number",
                                "description": "The ID of the Project the NFT is part of"
                              },
                              "transferable": {
                                "type": "boolean",
                                "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                              },
                              "compressed": {
                                "type": "boolean",
                                "description": "Whether or not the NFTs in the Project are compressed"
                              },
                              "mintAddress": {
                                "type": "string",
                                "description": "Base-58 encoded string representing an on-chain address",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "Wallet address for the NFT's owner",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "claimerAddress": {
                                "type": "string",
                                "description": "Wallet address allowed to claim the NFT",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "image",
                              "id",
                              "mintAddress",
                              "status"
                            ]
                          }
                        },
                        "page": {
                          "type": "number",
                          "description": "Page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "Number per page",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total number of pages",
                          "example": 1
                        },
                        "totalResults": {
                          "type": "number",
                          "description": "Total number of results",
                          "example": 1
                        }
                      },
                      "required": [
                        "results",
                        "page",
                        "limit",
                        "totalPages",
                        "totalResults"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "mintAddress",
                    "status",
                    "sellerFeeBasisPoints",
                    "name",
                    "image",
                    "nfts"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Project",
        "description": "This endpoint allows you to perform an update on a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                },
                "required": [
                  "name",
                  "image",
                  "sellerFeeBasisPoints"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "params": {
                      "type": "object",
                      "properties": {
                        "projectId": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "projectId"
                      ]
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 32,
                          "description": "Name stored as on-chain metadata",
                          "example": "Underdog NFT"
                        },
                        "symbol": {
                          "type": "string",
                          "maxLength": 10,
                          "description": "Symbol stored as on-chain metadata",
                          "example": "UPDG"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description stored in the metadata",
                          "example": "I minted this NFT with the Underdog API"
                        },
                        "image": {
                          "type": "string",
                          "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                          "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                        },
                        "animationUrl": {
                          "type": "string",
                          "description": "URL pointing to the asset's animation.",
                          "example": "https://i.imgur.com/mGfz7Ig.mp4"
                        },
                        "externalUrl": {
                          "type": "string",
                          "description": "URL pointing to an external URL defining the asset",
                          "example": "https://app.underdogprotocol.com"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "description": "Key-value pairs of your NFT attributes",
                          "example": {
                            "points": 10,
                            "name": "LeBron"
                          }
                        },
                        "sellerFeeBasisPoints": {
                          "type": "integer",
                          "description": "Creator royalties in basis points - 100 basis points = 1%",
                          "example": 100
                        }
                      },
                      "required": [
                        "name",
                        "image",
                        "sellerFeeBasisPoints"
                      ]
                    }
                  },
                  "required": [
                    "params",
                    "body"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partial Update a Project",
        "description": "This endpoint allows you to perform a partial update on a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "sellerFeeBasisPoints": {
                    "type": "integer",
                    "description": "Creator royalties in basis points - 100 basis points = 1%",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/stats": {
      "get": {
        "summary": "Retrieve Project Stats",
        "description": "This endpoint allows you to retrieve stats about the NFTs in a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "Total number of assets in the Project"
                    },
                    "confirmed": {
                      "type": "number",
                      "description": "Number of confirmed assets"
                    },
                    "processing": {
                      "type": "number",
                      "description": "Number of assets being processed"
                    },
                    "pending": {
                      "type": "number",
                      "description": "Number of assets waiting to be processed"
                    },
                    "burned": {
                      "type": "number",
                      "description": "Number of burned assets"
                    },
                    "failed": {
                      "type": "number",
                      "description": "Number of assets failed"
                    }
                  },
                  "required": [
                    "total",
                    "confirmed",
                    "processing",
                    "pending",
                    "burned",
                    "failed"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/nfts": {
      "get": {
        "summary": "List all NFTs",
        "description": "This endpoints allows you to retrieve a paginated list of all NFTs in a Project.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ownerAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "identifier",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an NFT",
        "description": "This endpoint allows you to create a new NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Name stored as on-chain metadata",
                    "example": "Underdog NFT"
                  },
                  "symbol": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "Symbol stored as on-chain metadata",
                    "example": "UPDG"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "receiver": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address that will receive the NFT",
                        "example": "7px1aXrdcySNHEF8aQ12iHBW5a2MVsqQU1ELkTdYAgjN"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace of the application (e.g. solarplex, superteam)",
                        "example": "public"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the user's Passport (i.e. email, wallet address, twitter handle)",
                        "example": "kevin@underdogprotocol.com"
                      }
                    }
                  },
                  "receiverAddress": {
                    "type": "string",
                    "description": "Base-58 encoded string representing an on-chain address",
                    "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                  },
                  "delegated": {
                    "type": "boolean",
                    "description": "If true, your Project will have delegated authority to transfer or burn the asset"
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an array of NFTs with upserted metadata",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 32,
                          "description": "Name stored as on-chain metadata",
                          "example": "Underdog NFT"
                        },
                        "symbol": {
                          "type": "string",
                          "maxLength": 10,
                          "description": "Symbol stored as on-chain metadata",
                          "example": "UPDG"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description stored in the metadata",
                          "example": "I minted this NFT with the Underdog API"
                        },
                        "image": {
                          "type": "string",
                          "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                          "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                        },
                        "animationUrl": {
                          "type": "string",
                          "description": "URL pointing to the asset's animation.",
                          "example": "https://i.imgur.com/mGfz7Ig.mp4"
                        },
                        "externalUrl": {
                          "type": "string",
                          "description": "URL pointing to an external URL defining the asset",
                          "example": "https://app.underdogprotocol.com"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "description": "Key-value pairs of your NFT attributes",
                          "example": {
                            "points": 10,
                            "name": "LeBron"
                          }
                        },
                        "id": {
                          "type": "number",
                          "description": "Unique ID for an NFT in a Project"
                        },
                        "projectId": {
                          "type": "number",
                          "description": "The ID of the Project the NFT is part of"
                        },
                        "transferable": {
                          "type": "boolean",
                          "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                        },
                        "compressed": {
                          "type": "boolean",
                          "description": "Whether or not the NFTs in the Project are compressed"
                        },
                        "mintAddress": {
                          "type": "string",
                          "description": "Base-58 encoded string representing an on-chain address",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "ownerAddress": {
                          "type": "string",
                          "description": "Wallet address for the NFT's owner",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "claimerAddress": {
                          "type": "string",
                          "description": "Wallet address allowed to claim the NFT",
                          "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "image",
                        "id",
                        "mintAddress",
                        "status"
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/nfts/search": {
      "get": {
        "summary": "Search NFTs",
        "description": "This endpoints allows you to search a paginated list of NFTs by owner, mint, or claimer address.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          },
                          "id": {
                            "type": "number",
                            "description": "Unique ID for an NFT in a Project"
                          },
                          "projectId": {
                            "type": "number",
                            "description": "The ID of the Project the NFT is part of"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in the Project are compressed"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "Wallet address for the NFT's owner",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "claimerAddress": {
                            "type": "string",
                            "description": "Wallet address allowed to claim the NFT",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "image",
                          "id",
                          "mintAddress",
                          "status"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/nfts/{nftId}": {
      "get": {
        "summary": "Retrieve an NFT",
        "description": "This endpoint allows you to retrieve an NFT by NFT ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an NFT",
        "description": "This endpoint allows you to perform an update on an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partial Update an NFT",
        "description": "This endpoint allows you to perform a partial update on an NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description stored in the metadata",
                    "example": "I minted this NFT with the Underdog API"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                    "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "Key-value pairs of your NFT attributes",
                    "example": {
                      "points": 10,
                      "name": "LeBron"
                    }
                  },
                  "animationUrl": {
                    "type": "string",
                    "description": "URL pointing to the asset's animation.",
                    "example": "https://i.imgur.com/mGfz7Ig.mp4"
                  },
                  "externalUrl": {
                    "type": "string",
                    "description": "URL pointing to an external URL defining the asset",
                    "example": "https://app.underdogprotocol.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Updated NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/nfts/{nftId}/claim": {
      "get": {
        "summary": "Generate NFT Claim Link",
        "description": "This endpoint generates a claim link for your NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string"
                    },
                    "mintAddress": {
                      "type": "string"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "otp": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "link",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/nfts/{nftId}/revoke": {
      "post": {
        "summary": "Revoke an NFT",
        "description": "This endpoint allows you to revoke a non-transferable NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/n/{projectId}/nfts/{nftId}/burn": {
      "post": {
        "summary": "Burn an NFT",
        "description": "This endpoint allows you to burn a non-transferable NFT.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Non-Transferable Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "nftId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "nftId": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    }
                  },
                  "required": [
                    "transactionId",
                    "nftId",
                    "mintAddress"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/inscriptions": {
      "post": {
        "summary": "Create an Inscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inscriptions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "inscriptionAddress": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "transactionId",
                    "inscriptionAddress"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Inscriptions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inscriptions"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Inscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "authority": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "superAdminAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "orgId": {
                            "type": "integer"
                          },
                          "value": {
                            "type": "string"
                          },
                          "createdAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "updatedAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": [
                          "address",
                          "authority",
                          "superAdminAddress",
                          "orgId",
                          "value",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/inscriptions/{address}": {
      "get": {
        "summary": "Retrieve an Inscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inscriptions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an Inscription by address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "authority": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "superAdminAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "orgId": {
                      "type": "integer"
                    },
                    "value": {
                      "type": "string"
                    },
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "updatedAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "authority",
                    "superAdminAddress",
                    "orgId",
                    "value",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/nfts/{mintAddress}": {
      "get": {
        "summary": "Retrieve an NFT",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "NFTs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mintAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "id": {
                      "type": "number",
                      "description": "Unique ID for an NFT in a Project"
                    },
                    "projectId": {
                      "type": "number",
                      "description": "The ID of the Project the NFT is part of"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in the Project are compressed"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "Wallet address for the NFT's owner",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "claimerAddress": {
                      "type": "string",
                      "description": "Wallet address allowed to claim the NFT",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image",
                    "id",
                    "mintAddress",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/nfts/{mintAddress}/claim": {
      "post": {
        "summary": "Retrieve NFT Claim Transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "NFTs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mintAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "claimerAddress": {
                    "type": "string"
                  },
                  "payerAddress": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encoded & serialized transaction to be signed by the claimer's wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction": {
                      "type": "string",
                      "description": "Encoded & serialized transaction to be signed by the claimer's wallet"
                    }
                  },
                  "required": [
                    "transaction"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections": {
      "get": {
        "summary": "List NFT Collections",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ownerAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of NFT Collections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mintAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "status": {
                            "type": "string"
                          },
                          "transferable": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project can be transferred"
                          },
                          "compressed": {
                            "type": "boolean",
                            "description": "Whether or not the NFTs in this project are compressed"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "Name stored as on-chain metadata",
                            "example": "Underdog NFT"
                          },
                          "symbol": {
                            "type": "string",
                            "maxLength": 10,
                            "description": "Symbol stored as on-chain metadata",
                            "example": "UPDG"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description stored in the metadata",
                            "example": "I minted this NFT with the Underdog API"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                            "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                          },
                          "externalUrl": {
                            "type": "string",
                            "description": "URL pointing to an external URL defining the asset",
                            "example": "https://app.underdogprotocol.com"
                          },
                          "animationUrl": {
                            "type": "string",
                            "description": "URL pointing to the asset's animation.",
                            "example": "https://i.imgur.com/mGfz7Ig.mp4"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "description": "Key-value pairs of your NFT attributes",
                            "example": {
                              "points": 10,
                              "name": "LeBron"
                            }
                          }
                        },
                        "required": [
                          "mintAddress",
                          "status",
                          "name",
                          "image"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections/{mintAddress}": {
      "get": {
        "summary": "Retrieve NFT Collection",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mintAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ownerAddress",
            "schema": {
              "type": "string",
              "description": "Base-58 encoded string representing an on-chain address",
              "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "identifier",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an NFT Collection with a paginated list of NFTs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mintAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "status": {
                      "type": "string"
                    },
                    "transferable": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project can be transferred"
                    },
                    "compressed": {
                      "type": "boolean",
                      "description": "Whether or not the NFTs in this project are compressed"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 32,
                      "description": "Name stored as on-chain metadata",
                      "example": "Underdog NFT"
                    },
                    "symbol": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Symbol stored as on-chain metadata",
                      "example": "UPDG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description stored in the metadata",
                      "example": "I minted this NFT with the Underdog API"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                      "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                    },
                    "externalUrl": {
                      "type": "string",
                      "description": "URL pointing to an external URL defining the asset",
                      "example": "https://app.underdogprotocol.com"
                    },
                    "animationUrl": {
                      "type": "string",
                      "description": "URL pointing to the asset's animation.",
                      "example": "https://i.imgur.com/mGfz7Ig.mp4"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "description": "Key-value pairs of your NFT attributes",
                      "example": {
                        "points": 10,
                        "name": "LeBron"
                      }
                    },
                    "nfts": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 32,
                                "description": "Name stored as on-chain metadata",
                                "example": "Underdog NFT"
                              },
                              "symbol": {
                                "type": "string",
                                "maxLength": 10,
                                "description": "Symbol stored as on-chain metadata",
                                "example": "UPDG"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description stored in the metadata",
                                "example": "I minted this NFT with the Underdog API"
                              },
                              "image": {
                                "type": "string",
                                "description": "Image for your NFT. When creating an NFT, this can be a base64 encoded string or a URL pointing to an image.",
                                "example": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
                              },
                              "animationUrl": {
                                "type": "string",
                                "description": "URL pointing to the asset's animation.",
                                "example": "https://i.imgur.com/mGfz7Ig.mp4"
                              },
                              "externalUrl": {
                                "type": "string",
                                "description": "URL pointing to an external URL defining the asset",
                                "example": "https://app.underdogprotocol.com"
                              },
                              "attributes": {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "description": "Key-value pairs of your NFT attributes",
                                "example": {
                                  "points": 10,
                                  "name": "LeBron"
                                }
                              },
                              "transferable": {
                                "type": "boolean",
                                "description": "Whether or not the NFT can be transferred based on the Project its a part of"
                              },
                              "compressed": {
                                "type": "boolean",
                                "description": "Whether or not the NFTs in the Project are compressed"
                              },
                              "mintAddress": {
                                "type": "string",
                                "description": "Base-58 encoded string representing an on-chain address",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "Wallet address for the NFT's owner",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "claimerAddress": {
                                "type": "string",
                                "description": "Wallet address allowed to claim the NFT",
                                "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "image",
                              "mintAddress",
                              "status"
                            ]
                          }
                        },
                        "page": {
                          "type": "number",
                          "description": "Page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "Number per page",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total number of pages",
                          "example": 1
                        },
                        "totalResults": {
                          "type": "number",
                          "description": "Total number of results",
                          "example": 1
                        }
                      },
                      "required": [
                        "results",
                        "page",
                        "limit",
                        "totalPages",
                        "totalResults"
                      ]
                    }
                  },
                  "required": [
                    "mintAddress",
                    "status",
                    "name",
                    "image",
                    "nfts"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/domains": {
      "get": {
        "summary": "List Domains",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "authority",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "address",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "authority": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "namespace": {
                            "type": "string"
                          },
                          "expiredAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "nullable": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "address",
                          "authority",
                          "namespace"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/domains/{namespace}": {
      "get": {
        "summary": "Retrieve a Domain",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Domain by namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "authority": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "namespace": {
                      "type": "string"
                    },
                    "expiredAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "authority",
                    "namespace"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/orgs": {
      "get": {
        "summary": "List all Orgs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Orgs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Orgs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "superAdminAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3
                          },
                          "status": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "number"
                          },
                          "priority": {
                            "type": "integer",
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          },
                          "recharge": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "limit": {
                                "type": "number",
                                "minimum": 500,
                                "maximum": 10000
                              },
                              "amount": {
                                "type": "number",
                                "minimum": 500,
                                "maximum": 1000000
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "limit",
                              "amount",
                              "enabled"
                            ]
                          },
                          "network": {
                            "type": "string",
                            "enum": [
                              "DEVNET",
                              "LOCALNET",
                              "MAINNET"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "superAdminAddress",
                          "name",
                          "status",
                          "balance",
                          "priority",
                          "network"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orgs/{orgId}/stats": {
      "get": {
        "summary": "Retrieve Org Stats",
        "description": "This endpoint allows you to retrieve stats about the Org.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Orgs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nfts": {
                      "type": "number"
                    },
                    "projects": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "nfts",
                    "projects"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/transactions": {
      "get": {
        "summary": "List all Transactions",
        "description": "This endpoint allows you to retrieve a paginated list of all your Transactions.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Transaction ID that identifies the Transaction generated by an API request"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "burned",
                              "confirmed",
                              "failed",
                              "pending",
                              "processing"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ORG_CREATE",
                              "PROJECT_CREATE",
                              "PROJECT_NFT_BATCH",
                              "PROJECT_SFT_BATCH",
                              "PROJECT_NFT_BURN",
                              "PROJECT_NFT_REVOKE",
                              "PROJECT_NFT_UPDATE",
                              "PROJECT_ROYALTIES_WITHDRAW",
                              "PROJECT_UPDATE",
                              "CORE_PROJECT_CREATE",
                              "CORE_PROJECT_UPDATE",
                              "CORE_PROJECT_ASSET_CREATE",
                              "CORE_PROJECT_ASSET_UPDATE",
                              "CORE_PROJECT_ASSET_BATCH",
                              "PROJECT_NFT_CREATE",
                              "PROJECT_SFT_CREATE",
                              "PROJECT_NFT_TRANSFER",
                              "PROJECT_ASSET_TRANSFER",
                              "PROJECT_ASSET_BURN",
                              "PROJECT_ASSET_UPDATE",
                              "SHOP_CREATE",
                              "DUST_CREATE",
                              "NON_TRANSFERABLE_PROJECT_CREATE",
                              "TRANSFERABLE_PROJECT_CREATE",
                              "TRANSFERABLE_PROJECT_NFT_CREATE",
                              "INSCRIPTION_CREATE",
                              "SNAPSHOT_CREATE",
                              "TOKEN22_CREATE",
                              "TOKEN_CREATE",
                              "TOKEN_RENOUNCE",
                              "TOKEN_MINT",
                              "TREE_CREATE"
                            ]
                          },
                          "walletAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "data": {
                            "type": "string",
                            "nullable": true,
                            "description": "Transaction data in stringified JSON format"
                          },
                          "signature": {
                            "type": "string",
                            "nullable": true,
                            "description": "Signature of the on-chain transaction",
                            "example": "2yVZcx5rMDLDcqe31Uua6a93qw3qrNMsjroYWXV3sytttnrPSxk2heGK7yUorW6KrfiEpkLNYNVPivhgoigdRnK6"
                          },
                          "createdAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "network": {
                            "type": "string",
                            "enum": [
                              "DEVNET",
                              "LOCALNET",
                              "MAINNET"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "status",
                          "type",
                          "walletAddress",
                          "createdAt",
                          "network"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/transactions/{transactionId}": {
      "get": {
        "summary": "Retrieve a Transaction",
        "description": "This endpoint allows you to retrieve a transaction by providing a transaction ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "burned",
                        "confirmed",
                        "failed",
                        "pending",
                        "processing"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ORG_CREATE",
                        "PROJECT_CREATE",
                        "PROJECT_NFT_BATCH",
                        "PROJECT_SFT_BATCH",
                        "PROJECT_NFT_BURN",
                        "PROJECT_NFT_REVOKE",
                        "PROJECT_NFT_UPDATE",
                        "PROJECT_ROYALTIES_WITHDRAW",
                        "PROJECT_UPDATE",
                        "CORE_PROJECT_CREATE",
                        "CORE_PROJECT_UPDATE",
                        "CORE_PROJECT_ASSET_CREATE",
                        "CORE_PROJECT_ASSET_UPDATE",
                        "CORE_PROJECT_ASSET_BATCH",
                        "PROJECT_NFT_CREATE",
                        "PROJECT_SFT_CREATE",
                        "PROJECT_NFT_TRANSFER",
                        "PROJECT_ASSET_TRANSFER",
                        "PROJECT_ASSET_BURN",
                        "PROJECT_ASSET_UPDATE",
                        "SHOP_CREATE",
                        "DUST_CREATE",
                        "NON_TRANSFERABLE_PROJECT_CREATE",
                        "TRANSFERABLE_PROJECT_CREATE",
                        "TRANSFERABLE_PROJECT_NFT_CREATE",
                        "INSCRIPTION_CREATE",
                        "SNAPSHOT_CREATE",
                        "TOKEN22_CREATE",
                        "TOKEN_CREATE",
                        "TOKEN_RENOUNCE",
                        "TOKEN_MINT",
                        "TREE_CREATE"
                      ]
                    },
                    "walletAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "data": {
                      "type": "string",
                      "nullable": true,
                      "description": "Transaction data in stringified JSON format"
                    },
                    "signature": {
                      "type": "string",
                      "nullable": true,
                      "description": "Signature of the on-chain transaction",
                      "example": "2yVZcx5rMDLDcqe31Uua6a93qw3qrNMsjroYWXV3sytttnrPSxk2heGK7yUorW6KrfiEpkLNYNVPivhgoigdRnK6"
                    },
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "network": {
                      "type": "string",
                      "enum": [
                        "DEVNET",
                        "LOCALNET",
                        "MAINNET"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "type",
                    "walletAddress",
                    "createdAt",
                    "network"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/transactions/{transactionId}/retry": {
      "post": {
        "summary": "Retry a Transaction",
        "description": "This endpoint allows you to retry a transaction with the given transaction ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Transaction ID that identifies the Transaction generated by an API request"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "burned",
                        "confirmed",
                        "failed",
                        "pending",
                        "processing"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ORG_CREATE",
                        "PROJECT_CREATE",
                        "PROJECT_NFT_BATCH",
                        "PROJECT_SFT_BATCH",
                        "PROJECT_NFT_BURN",
                        "PROJECT_NFT_REVOKE",
                        "PROJECT_NFT_UPDATE",
                        "PROJECT_ROYALTIES_WITHDRAW",
                        "PROJECT_UPDATE",
                        "CORE_PROJECT_CREATE",
                        "CORE_PROJECT_UPDATE",
                        "CORE_PROJECT_ASSET_CREATE",
                        "CORE_PROJECT_ASSET_UPDATE",
                        "CORE_PROJECT_ASSET_BATCH",
                        "PROJECT_NFT_CREATE",
                        "PROJECT_SFT_CREATE",
                        "PROJECT_NFT_TRANSFER",
                        "PROJECT_ASSET_TRANSFER",
                        "PROJECT_ASSET_BURN",
                        "PROJECT_ASSET_UPDATE",
                        "SHOP_CREATE",
                        "DUST_CREATE",
                        "NON_TRANSFERABLE_PROJECT_CREATE",
                        "TRANSFERABLE_PROJECT_CREATE",
                        "TRANSFERABLE_PROJECT_NFT_CREATE",
                        "INSCRIPTION_CREATE",
                        "SNAPSHOT_CREATE",
                        "TOKEN22_CREATE",
                        "TOKEN_CREATE",
                        "TOKEN_RENOUNCE",
                        "TOKEN_MINT",
                        "TREE_CREATE"
                      ]
                    },
                    "walletAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "data": {
                      "type": "string",
                      "nullable": true,
                      "description": "Transaction data in stringified JSON format"
                    },
                    "signature": {
                      "type": "string",
                      "nullable": true,
                      "description": "Signature of the on-chain transaction",
                      "example": "2yVZcx5rMDLDcqe31Uua6a93qw3qrNMsjroYWXV3sytttnrPSxk2heGK7yUorW6KrfiEpkLNYNVPivhgoigdRnK6"
                    },
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "network": {
                      "type": "string",
                      "enum": [
                        "DEVNET",
                        "LOCALNET",
                        "MAINNET"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "type",
                    "walletAddress",
                    "createdAt",
                    "network"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/requests": {
      "get": {
        "summary": "List all Requests",
        "description": "This endpoint allows you to retrieve a paginated list of all your Requests.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "method",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endpoint",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "method": {
                            "type": "string"
                          },
                          "endpoint": {
                            "type": "string"
                          },
                          "body": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "transaction": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Transaction ID that identifies the Transaction generated by an API request"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "ORG_CREATE",
                                  "PROJECT_CREATE",
                                  "PROJECT_NFT_BATCH",
                                  "PROJECT_SFT_BATCH",
                                  "PROJECT_NFT_BURN",
                                  "PROJECT_NFT_REVOKE",
                                  "PROJECT_NFT_UPDATE",
                                  "PROJECT_ROYALTIES_WITHDRAW",
                                  "PROJECT_UPDATE",
                                  "CORE_PROJECT_CREATE",
                                  "CORE_PROJECT_UPDATE",
                                  "CORE_PROJECT_ASSET_CREATE",
                                  "CORE_PROJECT_ASSET_UPDATE",
                                  "CORE_PROJECT_ASSET_BATCH",
                                  "PROJECT_NFT_CREATE",
                                  "PROJECT_SFT_CREATE",
                                  "PROJECT_NFT_TRANSFER",
                                  "PROJECT_ASSET_TRANSFER",
                                  "PROJECT_ASSET_BURN",
                                  "PROJECT_ASSET_UPDATE",
                                  "SHOP_CREATE",
                                  "DUST_CREATE",
                                  "NON_TRANSFERABLE_PROJECT_CREATE",
                                  "TRANSFERABLE_PROJECT_CREATE",
                                  "TRANSFERABLE_PROJECT_NFT_CREATE",
                                  "INSCRIPTION_CREATE",
                                  "SNAPSHOT_CREATE",
                                  "TOKEN22_CREATE",
                                  "TOKEN_CREATE",
                                  "TOKEN_RENOUNCE",
                                  "TOKEN_MINT",
                                  "TREE_CREATE"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          "response": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "status": {
                                "type": "number"
                              },
                              "body": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "status"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "method",
                          "endpoint",
                          "createdAt"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/requests/{requestId}": {
      "get": {
        "summary": "Retrieve a Request",
        "description": "This endpoint allows you to retrieve a request by providing a request ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "method": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "transaction": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Transaction ID that identifies the Transaction generated by an API request"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "ORG_CREATE",
                            "PROJECT_CREATE",
                            "PROJECT_NFT_BATCH",
                            "PROJECT_SFT_BATCH",
                            "PROJECT_NFT_BURN",
                            "PROJECT_NFT_REVOKE",
                            "PROJECT_NFT_UPDATE",
                            "PROJECT_ROYALTIES_WITHDRAW",
                            "PROJECT_UPDATE",
                            "CORE_PROJECT_CREATE",
                            "CORE_PROJECT_UPDATE",
                            "CORE_PROJECT_ASSET_CREATE",
                            "CORE_PROJECT_ASSET_UPDATE",
                            "CORE_PROJECT_ASSET_BATCH",
                            "PROJECT_NFT_CREATE",
                            "PROJECT_SFT_CREATE",
                            "PROJECT_NFT_TRANSFER",
                            "PROJECT_ASSET_TRANSFER",
                            "PROJECT_ASSET_BURN",
                            "PROJECT_ASSET_UPDATE",
                            "SHOP_CREATE",
                            "DUST_CREATE",
                            "NON_TRANSFERABLE_PROJECT_CREATE",
                            "TRANSFERABLE_PROJECT_CREATE",
                            "TRANSFERABLE_PROJECT_NFT_CREATE",
                            "INSCRIPTION_CREATE",
                            "SNAPSHOT_CREATE",
                            "TOKEN22_CREATE",
                            "TOKEN_CREATE",
                            "TOKEN_RENOUNCE",
                            "TOKEN_MINT",
                            "TREE_CREATE"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "response": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "number"
                        },
                        "body": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "method",
                    "endpoint",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/webhooks": {
      "post": {
        "summary": "Create a Webhook",
        "description": "This endpoint allows you to create a new Webhook.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "triggers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ORG_CREATE",
                        "PROJECT_CREATE",
                        "PROJECT_NFT_BATCH",
                        "PROJECT_SFT_BATCH",
                        "PROJECT_NFT_BURN",
                        "PROJECT_NFT_REVOKE",
                        "PROJECT_NFT_UPDATE",
                        "PROJECT_ROYALTIES_WITHDRAW",
                        "PROJECT_UPDATE",
                        "CORE_PROJECT_CREATE",
                        "CORE_PROJECT_UPDATE",
                        "CORE_PROJECT_ASSET_CREATE",
                        "CORE_PROJECT_ASSET_UPDATE",
                        "CORE_PROJECT_ASSET_BATCH",
                        "PROJECT_NFT_CREATE",
                        "PROJECT_SFT_CREATE",
                        "PROJECT_NFT_TRANSFER",
                        "PROJECT_ASSET_TRANSFER",
                        "PROJECT_ASSET_BURN",
                        "PROJECT_ASSET_UPDATE",
                        "SHOP_CREATE",
                        "DUST_CREATE",
                        "NON_TRANSFERABLE_PROJECT_CREATE",
                        "TRANSFERABLE_PROJECT_CREATE",
                        "TRANSFERABLE_PROJECT_NFT_CREATE",
                        "INSCRIPTION_CREATE",
                        "SNAPSHOT_CREATE",
                        "TOKEN22_CREATE",
                        "TOKEN_CREATE",
                        "TOKEN_RENOUNCE",
                        "TOKEN_MINT",
                        "TREE_CREATE"
                      ]
                    }
                  }
                },
                "required": [
                  "url",
                  "triggers"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "superAdminAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "orgId": {
                      "type": "integer"
                    },
                    "walletAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "valid": {
                      "type": "boolean"
                    },
                    "triggers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionType": {
                            "type": "string",
                            "enum": [
                              "ORG_CREATE",
                              "PROJECT_CREATE",
                              "PROJECT_NFT_BATCH",
                              "PROJECT_SFT_BATCH",
                              "PROJECT_NFT_BURN",
                              "PROJECT_NFT_REVOKE",
                              "PROJECT_NFT_UPDATE",
                              "PROJECT_ROYALTIES_WITHDRAW",
                              "PROJECT_UPDATE",
                              "CORE_PROJECT_CREATE",
                              "CORE_PROJECT_UPDATE",
                              "CORE_PROJECT_ASSET_CREATE",
                              "CORE_PROJECT_ASSET_UPDATE",
                              "CORE_PROJECT_ASSET_BATCH",
                              "PROJECT_NFT_CREATE",
                              "PROJECT_SFT_CREATE",
                              "PROJECT_NFT_TRANSFER",
                              "PROJECT_ASSET_TRANSFER",
                              "PROJECT_ASSET_BURN",
                              "PROJECT_ASSET_UPDATE",
                              "SHOP_CREATE",
                              "DUST_CREATE",
                              "NON_TRANSFERABLE_PROJECT_CREATE",
                              "TRANSFERABLE_PROJECT_CREATE",
                              "TRANSFERABLE_PROJECT_NFT_CREATE",
                              "INSCRIPTION_CREATE",
                              "SNAPSHOT_CREATE",
                              "TOKEN22_CREATE",
                              "TOKEN_CREATE",
                              "TOKEN_RENOUNCE",
                              "TOKEN_MINT",
                              "TREE_CREATE"
                            ]
                          }
                        },
                        "required": [
                          "transactionType"
                        ]
                      }
                    },
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "updatedAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "url",
                    "superAdminAddress",
                    "orgId",
                    "walletAddress",
                    "valid",
                    "triggers",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all Webhooks",
        "description": "This endpoint allows you to retrieve a paginated list of all your Webhooks.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "superAdminAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "orgId": {
                            "type": "integer"
                          },
                          "walletAddress": {
                            "type": "string",
                            "description": "Base-58 encoded string representing an on-chain address",
                            "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                          },
                          "valid": {
                            "type": "boolean"
                          },
                          "triggers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "transactionType": {
                                  "type": "string",
                                  "enum": [
                                    "ORG_CREATE",
                                    "PROJECT_CREATE",
                                    "PROJECT_NFT_BATCH",
                                    "PROJECT_SFT_BATCH",
                                    "PROJECT_NFT_BURN",
                                    "PROJECT_NFT_REVOKE",
                                    "PROJECT_NFT_UPDATE",
                                    "PROJECT_ROYALTIES_WITHDRAW",
                                    "PROJECT_UPDATE",
                                    "CORE_PROJECT_CREATE",
                                    "CORE_PROJECT_UPDATE",
                                    "CORE_PROJECT_ASSET_CREATE",
                                    "CORE_PROJECT_ASSET_UPDATE",
                                    "CORE_PROJECT_ASSET_BATCH",
                                    "PROJECT_NFT_CREATE",
                                    "PROJECT_SFT_CREATE",
                                    "PROJECT_NFT_TRANSFER",
                                    "PROJECT_ASSET_TRANSFER",
                                    "PROJECT_ASSET_BURN",
                                    "PROJECT_ASSET_UPDATE",
                                    "SHOP_CREATE",
                                    "DUST_CREATE",
                                    "NON_TRANSFERABLE_PROJECT_CREATE",
                                    "TRANSFERABLE_PROJECT_CREATE",
                                    "TRANSFERABLE_PROJECT_NFT_CREATE",
                                    "INSCRIPTION_CREATE",
                                    "SNAPSHOT_CREATE",
                                    "TOKEN22_CREATE",
                                    "TOKEN_CREATE",
                                    "TOKEN_RENOUNCE",
                                    "TOKEN_MINT",
                                    "TREE_CREATE"
                                  ]
                                }
                              },
                              "required": [
                                "transactionType"
                              ]
                            }
                          },
                          "createdAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "updatedAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "url",
                          "superAdminAddress",
                          "orgId",
                          "walletAddress",
                          "valid",
                          "triggers",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "page": {
                      "type": "number",
                      "description": "Page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "description": "Number per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "Total number of pages",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "number",
                      "description": "Total number of results",
                      "example": 1
                    }
                  },
                  "required": [
                    "results",
                    "page",
                    "limit",
                    "totalPages",
                    "totalResults"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/webhooks/{webhookId}": {
      "get": {
        "summary": "Retrieve a Webhook",
        "description": "This endpoint allows you to retrieve a Webhook by providing a Webhook ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webhookId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1,
              "description": "Page number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 10,
              "description": "Items per page"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "superAdminAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "orgId": {
                      "type": "integer"
                    },
                    "walletAddress": {
                      "type": "string",
                      "description": "Base-58 encoded string representing an on-chain address",
                      "example": "dustFPTV7dujoJjgkKtf6is3bYaFEy1nswS23vxHfvt"
                    },
                    "valid": {
                      "type": "boolean"
                    },
                    "triggers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionType": {
                            "type": "string",
                            "enum": [
                              "ORG_CREATE",
                              "PROJECT_CREATE",
                              "PROJECT_NFT_BATCH",
                              "PROJECT_SFT_BATCH",
                              "PROJECT_NFT_BURN",
                              "PROJECT_NFT_REVOKE",
                              "PROJECT_NFT_UPDATE",
                              "PROJECT_ROYALTIES_WITHDRAW",
                              "PROJECT_UPDATE",
                              "CORE_PROJECT_CREATE",
                              "CORE_PROJECT_UPDATE",
                              "CORE_PROJECT_ASSET_CREATE",
                              "CORE_PROJECT_ASSET_UPDATE",
                              "CORE_PROJECT_ASSET_BATCH",
                              "PROJECT_NFT_CREATE",
                              "PROJECT_SFT_CREATE",
                              "PROJECT_NFT_TRANSFER",
                              "PROJECT_ASSET_TRANSFER",
                              "PROJECT_ASSET_BURN",
                              "PROJECT_ASSET_UPDATE",
                              "SHOP_CREATE",
                              "DUST_CREATE",
                              "NON_TRANSFERABLE_PROJECT_CREATE",
                              "TRANSFERABLE_PROJECT_CREATE",
                              "TRANSFERABLE_PROJECT_NFT_CREATE",
                              "INSCRIPTION_CREATE",
                              "SNAPSHOT_CREATE",
                              "TOKEN22_CREATE",
                              "TOKEN_CREATE",
                              "TOKEN_RENOUNCE",
                              "TOKEN_MINT",
                              "TREE_CREATE"
                            ]
                          }
                        },
                        "required": [
                          "transactionType"
                        ]
                      }
                    },
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "updatedAt": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "method": {
                                "type": "string"
                              },
                              "endpoint": {
                                "type": "string"
                              },
                              "body": {
                                "type": "string",
                                "nullable": true
                              },
                              "createdAt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "transaction": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Transaction ID that identifies the Transaction generated by an API request"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "ORG_CREATE",
                                      "PROJECT_CREATE",
                                      "PROJECT_NFT_BATCH",
                                      "PROJECT_SFT_BATCH",
                                      "PROJECT_NFT_BURN",
                                      "PROJECT_NFT_REVOKE",
                                      "PROJECT_NFT_UPDATE",
                                      "PROJECT_ROYALTIES_WITHDRAW",
                                      "PROJECT_UPDATE",
                                      "CORE_PROJECT_CREATE",
                                      "CORE_PROJECT_UPDATE",
                                      "CORE_PROJECT_ASSET_CREATE",
                                      "CORE_PROJECT_ASSET_UPDATE",
                                      "CORE_PROJECT_ASSET_BATCH",
                                      "PROJECT_NFT_CREATE",
                                      "PROJECT_SFT_CREATE",
                                      "PROJECT_NFT_TRANSFER",
                                      "PROJECT_ASSET_TRANSFER",
                                      "PROJECT_ASSET_BURN",
                                      "PROJECT_ASSET_UPDATE",
                                      "SHOP_CREATE",
                                      "DUST_CREATE",
                                      "NON_TRANSFERABLE_PROJECT_CREATE",
                                      "TRANSFERABLE_PROJECT_CREATE",
                                      "TRANSFERABLE_PROJECT_NFT_CREATE",
                                      "INSCRIPTION_CREATE",
                                      "SNAPSHOT_CREATE",
                                      "TOKEN22_CREATE",
                                      "TOKEN_CREATE",
                                      "TOKEN_RENOUNCE",
                                      "TOKEN_MINT",
                                      "TREE_CREATE"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "type"
                                ]
                              },
                              "response": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "number"
                                  },
                                  "body": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "status"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "method",
                              "endpoint",
                              "createdAt"
                            ]
                          }
                        },
                        "page": {
                          "type": "number",
                          "description": "Page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "Number per page",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total number of pages",
                          "example": 1
                        },
                        "totalResults": {
                          "type": "number",
                          "description": "Total number of results",
                          "example": 1
                        }
                      },
                      "required": [
                        "results",
                        "page",
                        "limit",
                        "totalPages",
                        "totalResults"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "url",
                    "superAdminAddress",
                    "orgId",
                    "walletAddress",
                    "valid",
                    "triggers",
                    "createdAt",
                    "updatedAt",
                    "requests"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Webhook",
        "description": "This endpoint allows you to delete a Webhook.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webhookId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}